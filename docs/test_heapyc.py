# Tests generated by: guppy.gsl.Tester
# Date: Fri Oct 20 06:44:48 2023
class Tester:
    tests = {}
    def get_ex_1(self):
        from guppy.heapy.heapyc import NodeGraph
        return NodeGraph()
    def get_ex_2(self):
        from guppy.heapy.heapyc import HeapView
        hv = HeapView((), ())
        return hv.cli_none()
    def get_ex_3(self):
        from guppy.sets import immnodeset
        return immnodeset()
    def get_ex_4(self):
        from guppy.sets import MutNodeSet
        return MutNodeSet
    def get_ex_5(self):
        class C:
            pass
        return C
    def test_HeapView(self, arg):
        t0 = arg.limitframe
        t1 = arg.is_hiding_calling_interpreter
        t2 = arg.relate((), ())
        t3 = arg.indisize_sum([1])
        t4 = arg.numedges((), ())
        t5 = arg.reachable(self.get_ex_3(), self.get_ex_3())
        t6 = arg.reachable_x(self.get_ex_3(), self.get_ex_3())
        t7 = arg.relimg([1])
        t8 = arg.shpathstep(self.get_ex_1(), self.get_ex_3(), self.get_ex_3())
        t9 = arg.shpathstep(self.get_ex_1(), self.get_ex_3(), self.get_ex_3(), self.get_ex_1())
        t10 = arg.shpathstep(self.get_ex_1(), self.get_ex_3(), self.get_ex_3(), self.get_ex_1(), True)
        t11 = arg.heap()
        t12 = arg.cli_indisize({})
        t13 = arg.cli_none()
        t14 = arg.cli_rcs(self.get_ex_1(), self.get_ex_2(), {})
        t15 = arg.cli_type()
        t16 = arg._hiding_tag_
        t17 = arg.delete_extra_type
        t18 = arg.register__hiding_tag__type(self.get_ex_4())
        t19 = arg.register_hidden_exact_type(int)
        t20 = arg.register_hidden_exact_type(self.get_ex_5())
        t21 = arg.update_dictowners(self.get_ex_1())
        t22 = arg.update_referrers(self.get_ex_1(), self.get_ex_3())
        t23 = arg.update_referrers_completely(self.get_ex_1())
    tests['.tgt.kindnames.HeapView'] = test_HeapView
    def cond_0(_self, x, y):
        # Condition: .tgt.sets.CommonSet.cond:contains
        return (y in x)
    def cond_1(_self, x):
        # Condition: .tgt.sets.CommonSet.cond:empty
        return (not x)
    def cond_2(_self, x, y):
        # Condition: .tgt.sets.CommonSet.cond:equalset
        from guppy.sets import immnodeset
        return (immnodeset(x) == immnodeset(y))
    def cond_3(_self, x):
        # Condition: .tgt.sets.CommonSet.cond:istrue
        return (bool(x))
    def cond_4(_self, x, y):
        # Condition: .tgt.sets.CommonSet.cond:subset
        from guppy.sets import immnodeset
        return (immnodeset(x) <= immnodeset(y))
    def test_MutNodeSet(self, arg):
        t0 = arg.add(())
        assert self.cond_0(arg, ()), "Failed postcondition: 'CommonSet.contains(S, e)'"
        assert not self.cond_1(arg), "Failed postcondition: 'not CommonSet.empty(S)'"
        arg.discard(())
        t1 = arg.append(())
        assert self.cond_0(arg, ()), "Failed postcondition: 'CommonSet.contains(S, e)'"
        assert not self.cond_1(arg), "Failed postcondition: 'not CommonSet.empty(S)'"
        t2 = arg.clear()
        assert self.cond_1(arg), "Failed postcondition: 'CommonSet.empty(S)'"
        t3 = arg.discard(())
        assert not self.cond_0(arg, ()), "Failed postcondition: 'not CommonSet.contains(S, e)'"
        arg.add(())
        t4 = arg.pop()
        assert not self.cond_0(arg, t4), "Failed postcondition: 'not CommonSet.contains(S, <returned value>)'"
        arg.add(())
        t5 = arg.remove(())
        assert not self.cond_0(arg, ()), "Failed postcondition: 'not CommonSet.contains(S, e)'"
        t6 = len(arg)
        t7 = iter(arg)
        assert self.cond_2(t7, arg), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        pre_0 = self.cond_0(arg, ())
        t8 = arg.tas(())
        assert self.cond_0(arg, ()), "Failed postcondition: 'CommonSet.contains(S, e)'"
        assert not self.cond_1(arg), "Failed postcondition: 'not CommonSet.empty(S)'"
        assert pre_0 == self.cond_3(t8), 'Failed postcondition equality: CommonSet.istrue(<returned value>)'
        pre_0 = self.cond_0(arg, ())
        t9 = arg.tac(())
        assert not self.cond_0(arg, ()), "Failed postcondition: 'not CommonSet.contains(S, e)'"
        assert pre_0 == self.cond_3(t9), 'Failed postcondition equality: CommonSet.istrue(<returned value>)'
        t10 = arg == self.get_ex_3()
        t11 = arg != self.get_ex_3()
        t12 = arg <= self.get_ex_3()
        t13 = arg < self.get_ex_3()
        t14 = arg >= self.get_ex_3()
        t15 = arg > self.get_ex_3()
        t16 = () in arg
        t17 = arg
        t17 &= [1]
        assert self.cond_4(t17, arg), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t17, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t18 = len(t17)
        t19 = t17 != self.get_ex_3()
        t20 = t17 > self.get_ex_3()
        t21 = iter(t17)
        assert self.cond_2(t21, t17), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t22 = () in t17
        t23 = t17 == self.get_ex_3()
        t24 = t17 <= self.get_ex_3()
        t25 = t17 < self.get_ex_3()
        t26 = t17 >= self.get_ex_3()
        t27 = t17
        t27 &= [1]
        assert self.cond_4(t27, t17), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t27, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t28 = t17
        t28 |= [1]
        assert self.cond_4(t17, t28), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t28), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t29 = t17
        t29 ^= [1]
        t30 = t17
        t30 -= [1]
        t31 = t17 & [1]
        assert self.cond_4(t31, t17), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t31, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t32 = t17 | [1]
        assert self.cond_4(t17, t32), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t32), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t33 = t17 ^ [1]
        t34 = t17 - [1]
        t35 = arg
        t35 |= [1]
        assert self.cond_4(arg, t35), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t35), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t36 = iter(t35)
        assert self.cond_2(t36, t35), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t37 = t35 <= self.get_ex_3()
        t38 = len(t35)
        t39 = () in t35
        t40 = t35 == self.get_ex_3()
        t41 = t35 != self.get_ex_3()
        t42 = t35 < self.get_ex_3()
        t43 = t35 >= self.get_ex_3()
        t44 = t35 > self.get_ex_3()
        t45 = t35
        t45 |= [1]
        assert self.cond_4(t35, t45), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t45), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t46 = t35
        t46 &= [1]
        assert self.cond_4(t46, t35), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t46, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t47 = t35
        t47 ^= [1]
        t48 = t35
        t48 -= [1]
        t49 = t35 | [1]
        assert self.cond_4(t35, t49), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t49), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t50 = t35 & [1]
        assert self.cond_4(t50, t35), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t50, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t51 = t35 ^ [1]
        t52 = t35 - [1]
        t53 = arg
        t53 ^= [1]
        t54 = () in t53
        t55 = t53 < self.get_ex_3()
        t56 = len(t53)
        t57 = iter(t53)
        assert self.cond_2(t57, t53), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t58 = t53 == self.get_ex_3()
        t59 = t53 != self.get_ex_3()
        t60 = t53 <= self.get_ex_3()
        t61 = t53 >= self.get_ex_3()
        t62 = t53 > self.get_ex_3()
        t63 = t53
        t63 ^= [1]
        t64 = t53
        t64 &= [1]
        assert self.cond_4(t64, t53), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t64, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t65 = t53
        t65 |= [1]
        assert self.cond_4(t53, t65), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t65), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t66 = t53
        t66 -= [1]
        t67 = t53 ^ [1]
        t68 = t53 & [1]
        assert self.cond_4(t68, t53), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t68, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t69 = t53 | [1]
        assert self.cond_4(t53, t69), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t69), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t70 = t53 - [1]
        t71 = arg
        t71 -= [1]
        t72 = t71 == self.get_ex_3()
        t73 = t71 >= self.get_ex_3()
        t74 = len(t71)
        t75 = iter(t71)
        assert self.cond_2(t75, t71), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t76 = () in t71
        t77 = t71 != self.get_ex_3()
        t78 = t71 <= self.get_ex_3()
        t79 = t71 < self.get_ex_3()
        t80 = t71 > self.get_ex_3()
        t81 = t71
        t81 -= [1]
        t82 = t71
        t82 &= [1]
        assert self.cond_4(t82, t71), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t82, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t83 = t71
        t83 |= [1]
        assert self.cond_4(t71, t83), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t83), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t84 = t71
        t84 ^= [1]
        t85 = t71 - [1]
        t86 = t71 & [1]
        assert self.cond_4(t86, t71), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t86, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t87 = t71 | [1]
        assert self.cond_4(t71, t87), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t87), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t88 = t71 ^ [1]
        t89 = arg & [1]
        assert self.cond_4(t89, arg), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t89, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t90 = len(t89)
        t91 = t89 == self.get_ex_3()
        t92 = t89 >= self.get_ex_3()
        t93 = t89
        t93 ^= [1]
        t94 = hash(t89)
        t95 = iter(t89)
        assert self.cond_2(t95, t89), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t96 = () in t89
        t97 = t89 != self.get_ex_3()
        t98 = t89 <= self.get_ex_3()
        t99 = t89 < self.get_ex_3()
        t100 = t89 > self.get_ex_3()
        t101 = t89
        t101 &= [1]
        assert self.cond_4(t101, t89), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t101, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t102 = t89
        t102 |= [1]
        assert self.cond_4(t89, t102), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t102), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t103 = t89
        t103 -= [1]
        t104 = t89 & [1]
        assert self.cond_4(t104, t89), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t104, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t105 = t89 | [1]
        assert self.cond_4(t89, t105), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t105), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t106 = t89 ^ [1]
        t107 = t89 - [1]
        t108 = arg | [1]
        assert self.cond_4(arg, t108), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t108), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t109 = hash(t108)
        t110 = t108 != self.get_ex_3()
        t111 = t108 > self.get_ex_3()
        t112 = t108
        t112 -= [1]
        t113 = len(t108)
        t114 = iter(t108)
        assert self.cond_2(t114, t108), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t115 = () in t108
        t116 = t108 == self.get_ex_3()
        t117 = t108 <= self.get_ex_3()
        t118 = t108 < self.get_ex_3()
        t119 = t108 >= self.get_ex_3()
        t120 = t108
        t120 &= [1]
        assert self.cond_4(t120, t108), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t120, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t121 = t108
        t121 |= [1]
        assert self.cond_4(t108, t121), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t121), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t122 = t108
        t122 ^= [1]
        t123 = t108 | [1]
        assert self.cond_4(t108, t123), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t123), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t124 = t108 & [1]
        assert self.cond_4(t124, t108), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t124, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t125 = t108 ^ [1]
        t126 = t108 - [1]
        t127 = arg ^ [1]
        t128 = iter(t127)
        assert self.cond_2(t128, t127), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t129 = t127 <= self.get_ex_3()
        t130 = t127
        t130 &= [1]
        assert self.cond_4(t130, t127), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t130, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t131 = len(t127)
        t132 = hash(t127)
        t133 = () in t127
        t134 = t127 == self.get_ex_3()
        t135 = t127 != self.get_ex_3()
        t136 = t127 < self.get_ex_3()
        t137 = t127 >= self.get_ex_3()
        t138 = t127 > self.get_ex_3()
        t139 = t127
        t139 |= [1]
        assert self.cond_4(t127, t139), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t139), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t140 = t127
        t140 ^= [1]
        t141 = t127
        t141 -= [1]
        t142 = t127 ^ [1]
        t143 = t127 & [1]
        assert self.cond_4(t143, t127), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t143, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t144 = t127 | [1]
        assert self.cond_4(t127, t144), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t144), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t145 = t127 - [1]
        t146 = arg - [1]
        t147 = () in t146
        t148 = t146 < self.get_ex_3()
        t149 = t146
        t149 |= [1]
        assert self.cond_4(t146, t149), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t149), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t150 = len(t146)
        t151 = hash(t146)
        t152 = iter(t146)
        assert self.cond_2(t152, t146), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t153 = t146 == self.get_ex_3()
        t154 = t146 != self.get_ex_3()
        t155 = t146 <= self.get_ex_3()
        t156 = t146 >= self.get_ex_3()
        t157 = t146 > self.get_ex_3()
        t158 = t146
        t158 &= [1]
        assert self.cond_4(t158, t146), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t158, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t159 = t146
        t159 ^= [1]
        t160 = t146
        t160 -= [1]
        t161 = t146 - [1]
        t162 = t146 & [1]
        assert self.cond_4(t162, t146), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t162, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t163 = t146 | [1]
        assert self.cond_4(t146, t163), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t163), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t164 = t146 ^ [1]
    tests['.tgt.kindnames.MutNodeSet'] = test_MutNodeSet
    def test_ImmNodeSet(self, arg):
        t0 = len(arg)
        t1 = hash(arg)
        t2 = iter(arg)
        assert self.cond_2(t2, arg), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t3 = arg == self.get_ex_3()
        t4 = arg != self.get_ex_3()
        t5 = arg <= self.get_ex_3()
        t6 = arg < self.get_ex_3()
        t7 = arg >= self.get_ex_3()
        t8 = arg > self.get_ex_3()
        t9 = () in arg
        t10 = arg
        t10 &= [1]
        assert self.cond_4(t10, arg), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t10, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t11 = len(t10)
        t12 = t10 != self.get_ex_3()
        t13 = t10 > self.get_ex_3()
        t14 = iter(t10)
        assert self.cond_2(t14, t10), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t15 = () in t10
        t16 = t10 == self.get_ex_3()
        t17 = t10 <= self.get_ex_3()
        t18 = t10 < self.get_ex_3()
        t19 = t10 >= self.get_ex_3()
        t20 = t10
        t20 &= [1]
        assert self.cond_4(t20, t10), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t20, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t21 = t10
        t21 |= [1]
        assert self.cond_4(t10, t21), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t21), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t22 = t10
        t22 ^= [1]
        t23 = t10
        t23 -= [1]
        t24 = t10 & [1]
        assert self.cond_4(t24, t10), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t24, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t25 = t10 | [1]
        assert self.cond_4(t10, t25), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t25), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t26 = t10 ^ [1]
        t27 = t10 - [1]
        t28 = arg
        t28 |= [1]
        assert self.cond_4(arg, t28), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t28), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t29 = iter(t28)
        assert self.cond_2(t29, t28), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t30 = t28 <= self.get_ex_3()
        t31 = len(t28)
        t32 = () in t28
        t33 = t28 == self.get_ex_3()
        t34 = t28 != self.get_ex_3()
        t35 = t28 < self.get_ex_3()
        t36 = t28 >= self.get_ex_3()
        t37 = t28 > self.get_ex_3()
        t38 = t28
        t38 |= [1]
        assert self.cond_4(t28, t38), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t38), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t39 = t28
        t39 &= [1]
        assert self.cond_4(t39, t28), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t39, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t40 = t28
        t40 ^= [1]
        t41 = t28
        t41 -= [1]
        t42 = t28 | [1]
        assert self.cond_4(t28, t42), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t42), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t43 = t28 & [1]
        assert self.cond_4(t43, t28), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t43, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t44 = t28 ^ [1]
        t45 = t28 - [1]
        t46 = arg
        t46 ^= [1]
        t47 = () in t46
        t48 = t46 < self.get_ex_3()
        t49 = len(t46)
        t50 = iter(t46)
        assert self.cond_2(t50, t46), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t51 = t46 == self.get_ex_3()
        t52 = t46 != self.get_ex_3()
        t53 = t46 <= self.get_ex_3()
        t54 = t46 >= self.get_ex_3()
        t55 = t46 > self.get_ex_3()
        t56 = t46
        t56 ^= [1]
        t57 = t46
        t57 &= [1]
        assert self.cond_4(t57, t46), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t57, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t58 = t46
        t58 |= [1]
        assert self.cond_4(t46, t58), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t58), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t59 = t46
        t59 -= [1]
        t60 = t46 ^ [1]
        t61 = t46 & [1]
        assert self.cond_4(t61, t46), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t61, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t62 = t46 | [1]
        assert self.cond_4(t46, t62), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t62), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t63 = t46 - [1]
        t64 = arg
        t64 -= [1]
        t65 = t64 == self.get_ex_3()
        t66 = t64 >= self.get_ex_3()
        t67 = len(t64)
        t68 = iter(t64)
        assert self.cond_2(t68, t64), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t69 = () in t64
        t70 = t64 != self.get_ex_3()
        t71 = t64 <= self.get_ex_3()
        t72 = t64 < self.get_ex_3()
        t73 = t64 > self.get_ex_3()
        t74 = t64
        t74 -= [1]
        t75 = t64
        t75 &= [1]
        assert self.cond_4(t75, t64), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t75, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t76 = t64
        t76 |= [1]
        assert self.cond_4(t64, t76), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t76), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t77 = t64
        t77 ^= [1]
        t78 = t64 - [1]
        t79 = t64 & [1]
        assert self.cond_4(t79, t64), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t79, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t80 = t64 | [1]
        assert self.cond_4(t64, t80), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t80), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t81 = t64 ^ [1]
        t82 = arg & [1]
        assert self.cond_4(t82, arg), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t82, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t83 = len(t82)
        t84 = t82 != self.get_ex_3()
        t85 = t82 > self.get_ex_3()
        t86 = t82
        t86 ^= [1]
        t87 = hash(t82)
        t88 = iter(t82)
        assert self.cond_2(t88, t82), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t89 = t82 == self.get_ex_3()
        t90 = t82 <= self.get_ex_3()
        t91 = t82 < self.get_ex_3()
        t92 = t82 >= self.get_ex_3()
        t93 = () in t82
        t94 = t82
        t94 &= [1]
        assert self.cond_4(t94, t82), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t94, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t95 = t82
        t95 |= [1]
        assert self.cond_4(t82, t95), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t95), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t96 = t82
        t96 -= [1]
        t97 = t82 & [1]
        assert self.cond_4(t97, t82), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t97, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t98 = t82 | [1]
        assert self.cond_4(t82, t98), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t98), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t99 = t82 ^ [1]
        t100 = t82 - [1]
        t101 = arg | [1]
        assert self.cond_4(arg, t101), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t101), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t102 = hash(t101)
        t103 = t101 <= self.get_ex_3()
        t104 = () in t101
        t105 = t101
        t105 -= [1]
        t106 = len(t101)
        t107 = iter(t101)
        assert self.cond_2(t107, t101), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t108 = t101 == self.get_ex_3()
        t109 = t101 != self.get_ex_3()
        t110 = t101 < self.get_ex_3()
        t111 = t101 >= self.get_ex_3()
        t112 = t101 > self.get_ex_3()
        t113 = t101
        t113 &= [1]
        assert self.cond_4(t113, t101), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t113, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t114 = t101
        t114 |= [1]
        assert self.cond_4(t101, t114), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t114), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t115 = t101
        t115 ^= [1]
        t116 = t101 & [1]
        assert self.cond_4(t116, t101), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t116, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t117 = t101 | [1]
        assert self.cond_4(t101, t117), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t117), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t118 = t101 ^ [1]
        t119 = t101 - [1]
        t120 = arg ^ [1]
        t121 = iter(t120)
        assert self.cond_2(t121, t120), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t122 = t120 < self.get_ex_3()
        t123 = t120
        t123 &= [1]
        assert self.cond_4(t123, t120), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t123, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t124 = len(t120)
        t125 = hash(t120)
        t126 = t120 == self.get_ex_3()
        t127 = t120 != self.get_ex_3()
        t128 = t120 <= self.get_ex_3()
        t129 = t120 >= self.get_ex_3()
        t130 = t120 > self.get_ex_3()
        t131 = () in t120
        t132 = t120
        t132 |= [1]
        assert self.cond_4(t120, t132), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t132), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t133 = t120
        t133 ^= [1]
        t134 = t120
        t134 -= [1]
        t135 = t120 & [1]
        assert self.cond_4(t135, t120), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t135, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t136 = t120 | [1]
        assert self.cond_4(t120, t136), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t136), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t137 = t120 ^ [1]
        t138 = t120 - [1]
        t139 = arg - [1]
        t140 = t139 == self.get_ex_3()
        t141 = t139 >= self.get_ex_3()
        t142 = t139
        t142 |= [1]
        assert self.cond_4(t139, t142), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t142), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t143 = len(t139)
        t144 = hash(t139)
        t145 = iter(t139)
        assert self.cond_2(t145, t139), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t146 = t139 != self.get_ex_3()
        t147 = t139 <= self.get_ex_3()
        t148 = t139 < self.get_ex_3()
        t149 = t139 > self.get_ex_3()
        t150 = () in t139
        t151 = t139
        t151 &= [1]
        assert self.cond_4(t151, t139), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t151, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t152 = t139
        t152 ^= [1]
        t153 = t139
        t153 -= [1]
        t154 = t139 & [1]
        assert self.cond_4(t154, t139), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t154, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t155 = t139 | [1]
        assert self.cond_4(t139, t155), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t155), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t156 = t139 ^ [1]
        t157 = t139 - [1]
    tests['.tgt.kindnames.ImmNodeSet'] = test_ImmNodeSet
    def test_module_sets(self, arg):
        t0 = arg.mutnodeset()
        t1 = t0.add(())
        assert self.cond_0(t0, ()), "Failed postcondition: 'CommonSet.contains(S, e)'"
        assert not self.cond_1(t0), "Failed postcondition: 'not CommonSet.empty(S)'"
        t2 = t0.clear()
        assert self.cond_1(t0), "Failed postcondition: 'CommonSet.empty(S)'"
        t0.add(())
        t3 = t0.pop()
        assert not self.cond_0(t0, t3), "Failed postcondition: 'not CommonSet.contains(S, <returned value>)'"
        t0.discard(())
        t4 = t0.append(())
        assert self.cond_0(t0, ()), "Failed postcondition: 'CommonSet.contains(S, e)'"
        assert not self.cond_1(t0), "Failed postcondition: 'not CommonSet.empty(S)'"
        t5 = t0.discard(())
        assert not self.cond_0(t0, ()), "Failed postcondition: 'not CommonSet.contains(S, e)'"
        t0.add(())
        t6 = t0.remove(())
        assert not self.cond_0(t0, ()), "Failed postcondition: 'not CommonSet.contains(S, e)'"
        t7 = len(t0)
        t8 = iter(t0)
        assert self.cond_2(t8, t0), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        pre_0 = self.cond_0(t0, ())
        t9 = t0.tas(())
        assert self.cond_0(t0, ()), "Failed postcondition: 'CommonSet.contains(S, e)'"
        assert not self.cond_1(t0), "Failed postcondition: 'not CommonSet.empty(S)'"
        assert pre_0 == self.cond_3(t9), 'Failed postcondition equality: CommonSet.istrue(<returned value>)'
        t10 = () in t0
        t11 = t0 != self.get_ex_3()
        t12 = t0 < self.get_ex_3()
        t13 = t0 > self.get_ex_3()
        pre_0 = self.cond_0(t0, ())
        t14 = t0.tac(())
        assert not self.cond_0(t0, ()), "Failed postcondition: 'not CommonSet.contains(S, e)'"
        assert pre_0 == self.cond_3(t14), 'Failed postcondition equality: CommonSet.istrue(<returned value>)'
        t15 = t0 == self.get_ex_3()
        t16 = t0 <= self.get_ex_3()
        t17 = t0 >= self.get_ex_3()
        t18 = t0
        t18 &= [1]
        assert self.cond_4(t18, t0), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t18, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t19 = len(t18)
        t20 = t18 > self.get_ex_3()
        t21 = iter(t18)
        assert self.cond_2(t21, t18), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t22 = () in t18
        t23 = t18 == self.get_ex_3()
        t24 = t18 != self.get_ex_3()
        t25 = t18 <= self.get_ex_3()
        t26 = t18 < self.get_ex_3()
        t27 = t18 >= self.get_ex_3()
        t28 = t18
        t28 &= [1]
        assert self.cond_4(t28, t18), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t28, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t29 = t18
        t29 |= [1]
        assert self.cond_4(t18, t29), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t29), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t30 = t18
        t30 ^= [1]
        t31 = t18
        t31 -= [1]
        t32 = t18 & [1]
        assert self.cond_4(t32, t18), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t32, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t33 = t18 | [1]
        assert self.cond_4(t18, t33), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t33), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t34 = t18 ^ [1]
        t35 = t18 - [1]
        t36 = t0
        t36 ^= [1]
        t37 = () in t36
        t38 = len(t36)
        t39 = iter(t36)
        assert self.cond_2(t39, t36), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t40 = t36 == self.get_ex_3()
        t41 = t36 != self.get_ex_3()
        t42 = t36 <= self.get_ex_3()
        t43 = t36 < self.get_ex_3()
        t44 = t36 >= self.get_ex_3()
        t45 = t36 > self.get_ex_3()
        t46 = t36
        t46 ^= [1]
        t47 = t36
        t47 &= [1]
        assert self.cond_4(t47, t36), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t47, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t48 = t36
        t48 |= [1]
        assert self.cond_4(t36, t48), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t48), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t49 = t36
        t49 -= [1]
        t50 = t36 ^ [1]
        t51 = t36 & [1]
        assert self.cond_4(t51, t36), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t51, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t52 = t36 | [1]
        assert self.cond_4(t36, t52), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t52), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t53 = t36 - [1]
        t54 = t0
        t54 |= [1]
        assert self.cond_4(t0, t54), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t54), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t55 = t54 <= self.get_ex_3()
        t56 = len(t54)
        t57 = iter(t54)
        assert self.cond_2(t57, t54), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t58 = () in t54
        t59 = t54 == self.get_ex_3()
        t60 = t54 != self.get_ex_3()
        t61 = t54 < self.get_ex_3()
        t62 = t54 >= self.get_ex_3()
        t63 = t54 > self.get_ex_3()
        t64 = t54
        t64 |= [1]
        assert self.cond_4(t54, t64), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t64), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t65 = t54
        t65 &= [1]
        assert self.cond_4(t65, t54), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t65, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t66 = t54
        t66 ^= [1]
        t67 = t54
        t67 -= [1]
        t68 = t54 | [1]
        assert self.cond_4(t54, t68), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t68), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t69 = t54 & [1]
        assert self.cond_4(t69, t54), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t69, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t70 = t54 ^ [1]
        t71 = t54 - [1]
        t72 = t0
        t72 -= [1]
        t73 = t72 >= self.get_ex_3()
        t74 = len(t72)
        t75 = iter(t72)
        assert self.cond_2(t75, t72), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t76 = () in t72
        t77 = t72 == self.get_ex_3()
        t78 = t72 != self.get_ex_3()
        t79 = t72 <= self.get_ex_3()
        t80 = t72 < self.get_ex_3()
        t81 = t72 > self.get_ex_3()
        t82 = t72
        t82 -= [1]
        t83 = t72
        t83 &= [1]
        assert self.cond_4(t83, t72), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t83, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t84 = t72
        t84 |= [1]
        assert self.cond_4(t72, t84), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t84), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t85 = t72
        t85 ^= [1]
        t86 = t72 - [1]
        t87 = t72 & [1]
        assert self.cond_4(t87, t72), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t87, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t88 = t72 | [1]
        assert self.cond_4(t72, t88), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t88), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t89 = t72 ^ [1]
        t90 = t0 & [1]
        assert self.cond_4(t90, t0), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t90, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t91 = t90 >= self.get_ex_3()
        t92 = len(t90)
        t93 = hash(t90)
        t94 = iter(t90)
        assert self.cond_2(t94, t90), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t95 = () in t90
        t96 = t90 == self.get_ex_3()
        t97 = t90 != self.get_ex_3()
        t98 = t90 <= self.get_ex_3()
        t99 = t90 < self.get_ex_3()
        t100 = t90 > self.get_ex_3()
        t101 = t90
        t101 |= [1]
        assert self.cond_4(t90, t101), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t101), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t102 = t90
        t102 ^= [1]
        t103 = t90
        t103 -= [1]
        t104 = t90
        t104 &= [1]
        assert self.cond_4(t104, t90), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t104, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t105 = t90 & [1]
        assert self.cond_4(t105, t90), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t105, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t106 = t90 | [1]
        assert self.cond_4(t90, t106), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t106), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t107 = t90 ^ [1]
        t108 = t90 - [1]
        t109 = t0 ^ [1]
        t110 = t109
        t110 |= [1]
        assert self.cond_4(t109, t110), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t110), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t111 = len(t109)
        t112 = hash(t109)
        t113 = iter(t109)
        assert self.cond_2(t113, t109), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t114 = () in t109
        t115 = t109 == self.get_ex_3()
        t116 = t109 != self.get_ex_3()
        t117 = t109 <= self.get_ex_3()
        t118 = t109 < self.get_ex_3()
        t119 = t109 >= self.get_ex_3()
        t120 = t109 > self.get_ex_3()
        t121 = t109
        t121 ^= [1]
        t122 = t109
        t122 -= [1]
        t123 = t109
        t123 &= [1]
        assert self.cond_4(t123, t109), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t123, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t124 = t109 ^ [1]
        t125 = t109 & [1]
        assert self.cond_4(t125, t109), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t125, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t126 = t109 | [1]
        assert self.cond_4(t109, t126), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t126), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t127 = t109 - [1]
        t128 = t0 | [1]
        assert self.cond_4(t0, t128), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t128), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t129 = t128
        t129 &= [1]
        assert self.cond_4(t129, t128), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t129, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t130 = len(t128)
        t131 = hash(t128)
        t132 = iter(t128)
        assert self.cond_2(t132, t128), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t133 = () in t128
        t134 = t128 == self.get_ex_3()
        t135 = t128 != self.get_ex_3()
        t136 = t128 <= self.get_ex_3()
        t137 = t128 < self.get_ex_3()
        t138 = t128 >= self.get_ex_3()
        t139 = t128 > self.get_ex_3()
        t140 = t128
        t140 |= [1]
        assert self.cond_4(t128, t140), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t140), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t141 = t128
        t141 ^= [1]
        t142 = t128
        t142 -= [1]
        t143 = t128 | [1]
        assert self.cond_4(t128, t143), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t143), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t144 = t128 & [1]
        assert self.cond_4(t144, t128), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t144, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t145 = t128 ^ [1]
        t146 = t128 - [1]
        t147 = t0 - [1]
        t148 = hash(t147)
        t149 = len(t147)
        t150 = iter(t147)
        assert self.cond_2(t150, t147), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t151 = () in t147
        t152 = t147 == self.get_ex_3()
        t153 = t147 != self.get_ex_3()
        t154 = t147 <= self.get_ex_3()
        t155 = t147 < self.get_ex_3()
        t156 = t147 >= self.get_ex_3()
        t157 = t147 > self.get_ex_3()
        t158 = t147
        t158 |= [1]
        assert self.cond_4(t147, t158), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t158), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t159 = t147
        t159 ^= [1]
        t160 = t147
        t160 -= [1]
        t161 = t147
        t161 &= [1]
        assert self.cond_4(t161, t147), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t161, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t162 = t147 - [1]
        t163 = t147 & [1]
        assert self.cond_4(t163, t147), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t163, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t164 = t147 | [1]
        assert self.cond_4(t147, t164), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t164), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t165 = t147 ^ [1]
        t166 = arg.mutnodeset([1])
        t166.discard(())
        t167 = t166.append(())
        assert self.cond_0(t166, ()), "Failed postcondition: 'CommonSet.contains(S, e)'"
        assert not self.cond_1(t166), "Failed postcondition: 'not CommonSet.empty(S)'"
        t168 = t166.discard(())
        assert not self.cond_0(t166, ()), "Failed postcondition: 'not CommonSet.contains(S, e)'"
        t166.add(())
        t169 = t166.remove(())
        assert not self.cond_0(t166, ()), "Failed postcondition: 'not CommonSet.contains(S, e)'"
        t170 = t166.add(())
        assert self.cond_0(t166, ()), "Failed postcondition: 'CommonSet.contains(S, e)'"
        assert not self.cond_1(t166), "Failed postcondition: 'not CommonSet.empty(S)'"
        t171 = t166.clear()
        assert self.cond_1(t166), "Failed postcondition: 'CommonSet.empty(S)'"
        t166.add(())
        t172 = t166.pop()
        assert not self.cond_0(t166, t172), "Failed postcondition: 'not CommonSet.contains(S, <returned value>)'"
        t173 = len(t166)
        t174 = iter(t166)
        assert self.cond_2(t174, t166), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        pre_0 = self.cond_0(t166, ())
        t175 = t166.tac(())
        assert not self.cond_0(t166, ()), "Failed postcondition: 'not CommonSet.contains(S, e)'"
        assert pre_0 == self.cond_3(t175), 'Failed postcondition equality: CommonSet.istrue(<returned value>)'
        t176 = t166 == self.get_ex_3()
        t177 = t166 <= self.get_ex_3()
        t178 = t166 >= self.get_ex_3()
        pre_0 = self.cond_0(t166, ())
        t179 = t166.tas(())
        assert self.cond_0(t166, ()), "Failed postcondition: 'CommonSet.contains(S, e)'"
        assert not self.cond_1(t166), "Failed postcondition: 'not CommonSet.empty(S)'"
        assert pre_0 == self.cond_3(t179), 'Failed postcondition equality: CommonSet.istrue(<returned value>)'
        t180 = () in t166
        t181 = t166 != self.get_ex_3()
        t182 = t166 < self.get_ex_3()
        t183 = t166 > self.get_ex_3()
        t184 = t166
        t184 |= [1]
        assert self.cond_4(t166, t184), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t184), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t185 = iter(t184)
        assert self.cond_2(t185, t184), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t186 = len(t184)
        t187 = () in t184
        t188 = t184 == self.get_ex_3()
        t189 = t184 != self.get_ex_3()
        t190 = t184 <= self.get_ex_3()
        t191 = t184 < self.get_ex_3()
        t192 = t184 >= self.get_ex_3()
        t193 = t184 > self.get_ex_3()
        t194 = t184
        t194 |= [1]
        assert self.cond_4(t184, t194), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t194), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t195 = t184
        t195 &= [1]
        assert self.cond_4(t195, t184), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t195, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t196 = t184
        t196 ^= [1]
        t197 = t184
        t197 -= [1]
        t198 = t184 | [1]
        assert self.cond_4(t184, t198), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t198), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t199 = t184 & [1]
        assert self.cond_4(t199, t184), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t199, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t200 = t184 ^ [1]
        t201 = t184 - [1]
        t202 = t166
        t202 -= [1]
        t203 = t202 == self.get_ex_3()
        t204 = len(t202)
        t205 = iter(t202)
        assert self.cond_2(t205, t202), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t206 = () in t202
        t207 = t202 != self.get_ex_3()
        t208 = t202 <= self.get_ex_3()
        t209 = t202 < self.get_ex_3()
        t210 = t202 >= self.get_ex_3()
        t211 = t202 > self.get_ex_3()
        t212 = t202
        t212 -= [1]
        t213 = t202
        t213 &= [1]
        assert self.cond_4(t213, t202), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t213, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t214 = t202
        t214 |= [1]
        assert self.cond_4(t202, t214), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t214), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t215 = t202
        t215 ^= [1]
        t216 = t202 - [1]
        t217 = t202 & [1]
        assert self.cond_4(t217, t202), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t217, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t218 = t202 | [1]
        assert self.cond_4(t202, t218), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t218), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t219 = t202 ^ [1]
        t220 = t166
        t220 &= [1]
        assert self.cond_4(t220, t166), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t220, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t221 = t220 != self.get_ex_3()
        t222 = len(t220)
        t223 = iter(t220)
        assert self.cond_2(t223, t220), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t224 = () in t220
        t225 = t220 == self.get_ex_3()
        t226 = t220 <= self.get_ex_3()
        t227 = t220 < self.get_ex_3()
        t228 = t220 >= self.get_ex_3()
        t229 = t220 > self.get_ex_3()
        t230 = t220
        t230 &= [1]
        assert self.cond_4(t230, t220), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t230, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t231 = t220
        t231 |= [1]
        assert self.cond_4(t220, t231), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t231), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t232 = t220
        t232 ^= [1]
        t233 = t220
        t233 -= [1]
        t234 = t220 & [1]
        assert self.cond_4(t234, t220), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t234, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t235 = t220 | [1]
        assert self.cond_4(t220, t235), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t235), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t236 = t220 ^ [1]
        t237 = t220 - [1]
        t238 = t166
        t238 ^= [1]
        t239 = t238 < self.get_ex_3()
        t240 = len(t238)
        t241 = iter(t238)
        assert self.cond_2(t241, t238), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t242 = () in t238
        t243 = t238 == self.get_ex_3()
        t244 = t238 != self.get_ex_3()
        t245 = t238 <= self.get_ex_3()
        t246 = t238 >= self.get_ex_3()
        t247 = t238 > self.get_ex_3()
        t248 = t238
        t248 ^= [1]
        t249 = t238
        t249 &= [1]
        assert self.cond_4(t249, t238), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t249, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t250 = t238
        t250 |= [1]
        assert self.cond_4(t238, t250), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t250), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t251 = t238
        t251 -= [1]
        t252 = t238 ^ [1]
        t253 = t238 & [1]
        assert self.cond_4(t253, t238), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t253, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t254 = t238 | [1]
        assert self.cond_4(t238, t254), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t254), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t255 = t238 - [1]
        t256 = t166 | [1]
        assert self.cond_4(t166, t256), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t256), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t257 = t256 > self.get_ex_3()
        t258 = len(t256)
        t259 = hash(t256)
        t260 = iter(t256)
        assert self.cond_2(t260, t256), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t261 = () in t256
        t262 = t256 == self.get_ex_3()
        t263 = t256 != self.get_ex_3()
        t264 = t256 <= self.get_ex_3()
        t265 = t256 < self.get_ex_3()
        t266 = t256 >= self.get_ex_3()
        t267 = t256
        t267 |= [1]
        assert self.cond_4(t256, t267), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t267), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t268 = t256
        t268 ^= [1]
        t269 = t256
        t269 -= [1]
        t270 = t256
        t270 &= [1]
        assert self.cond_4(t270, t256), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t270, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t271 = t256 | [1]
        assert self.cond_4(t256, t271), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t271), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t272 = t256 & [1]
        assert self.cond_4(t272, t256), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t272, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t273 = t256 ^ [1]
        t274 = t256 - [1]
        t275 = t166 - [1]
        t276 = t275
        t276 ^= [1]
        t277 = len(t275)
        t278 = hash(t275)
        t279 = iter(t275)
        assert self.cond_2(t279, t275), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t280 = () in t275
        t281 = t275 == self.get_ex_3()
        t282 = t275 != self.get_ex_3()
        t283 = t275 <= self.get_ex_3()
        t284 = t275 < self.get_ex_3()
        t285 = t275 >= self.get_ex_3()
        t286 = t275 > self.get_ex_3()
        t287 = t275
        t287 |= [1]
        assert self.cond_4(t275, t287), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t287), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t288 = t275
        t288 -= [1]
        t289 = t275
        t289 &= [1]
        assert self.cond_4(t289, t275), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t289, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t290 = t275 - [1]
        t291 = t275 & [1]
        assert self.cond_4(t291, t275), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t291, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t292 = t275 | [1]
        assert self.cond_4(t275, t292), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t292), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t293 = t275 ^ [1]
        t294 = t166 & [1]
        assert self.cond_4(t294, t166), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t294, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t295 = t294
        t295 -= [1]
        t296 = len(t294)
        t297 = hash(t294)
        t298 = iter(t294)
        assert self.cond_2(t298, t294), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t299 = () in t294
        t300 = t294 == self.get_ex_3()
        t301 = t294 != self.get_ex_3()
        t302 = t294 <= self.get_ex_3()
        t303 = t294 < self.get_ex_3()
        t304 = t294 >= self.get_ex_3()
        t305 = t294 > self.get_ex_3()
        t306 = t294
        t306 |= [1]
        assert self.cond_4(t294, t306), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t306), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t307 = t294
        t307 ^= [1]
        t308 = t294
        t308 &= [1]
        assert self.cond_4(t308, t294), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t308, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t309 = t294 & [1]
        assert self.cond_4(t309, t294), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t309, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t310 = t294 | [1]
        assert self.cond_4(t294, t310), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t310), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t311 = t294 ^ [1]
        t312 = t294 - [1]
        t313 = t166 ^ [1]
        t314 = len(t313)
        t315 = hash(t313)
        t316 = iter(t313)
        assert self.cond_2(t316, t313), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t317 = () in t313
        t318 = t313 == self.get_ex_3()
        t319 = t313 != self.get_ex_3()
        t320 = t313 <= self.get_ex_3()
        t321 = t313 < self.get_ex_3()
        t322 = t313 >= self.get_ex_3()
        t323 = t313 > self.get_ex_3()
        t324 = t313
        t324 |= [1]
        assert self.cond_4(t313, t324), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t324), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t325 = t313
        t325 ^= [1]
        t326 = t313
        t326 -= [1]
        t327 = t313
        t327 &= [1]
        assert self.cond_4(t327, t313), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t327, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t328 = t313 ^ [1]
        t329 = t313 & [1]
        assert self.cond_4(t329, t313), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t329, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t330 = t313 | [1]
        assert self.cond_4(t313, t330), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t330), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t331 = t313 - [1]
        t332 = arg.immnodeset()
        t333 = len(t332)
        t334 = iter(t332)
        assert self.cond_2(t334, t332), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t335 = t332 == self.get_ex_3()
        t336 = t332 <= self.get_ex_3()
        t337 = t332 >= self.get_ex_3()
        t338 = t332
        t338 |= [1]
        assert self.cond_4(t332, t338), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t338), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t339 = len(t338)
        t340 = t338 != self.get_ex_3()
        t341 = t338 > self.get_ex_3()
        t342 = iter(t338)
        assert self.cond_2(t342, t338), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t343 = t338 == self.get_ex_3()
        t344 = t338 <= self.get_ex_3()
        t345 = t338 >= self.get_ex_3()
        t346 = t338
        t346 &= [1]
        assert self.cond_4(t346, t338), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t346, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t347 = t338
        t347 ^= [1]
        t348 = () in t338
        t349 = t338 < self.get_ex_3()
        t350 = t338
        t350 |= [1]
        assert self.cond_4(t338, t350), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t350), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t351 = t338
        t351 -= [1]
        t352 = t338 & [1]
        assert self.cond_4(t352, t338), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t352, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t353 = t338 ^ [1]
        t354 = t338 | [1]
        assert self.cond_4(t338, t354), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t354), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t355 = t338 - [1]
        t356 = t332
        t356 -= [1]
        t357 = () in t356
        t358 = t356 < self.get_ex_3()
        t359 = len(t356)
        t360 = t356 == self.get_ex_3()
        t361 = t356 != self.get_ex_3()
        t362 = t356 >= self.get_ex_3()
        t363 = t356 > self.get_ex_3()
        t364 = t356
        t364 ^= [1]
        t365 = t356
        t365 |= [1]
        assert self.cond_4(t356, t365), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t365), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t366 = iter(t356)
        assert self.cond_2(t366, t356), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t367 = t356 <= self.get_ex_3()
        t368 = t356
        t368 &= [1]
        assert self.cond_4(t368, t356), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t368, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t369 = t356
        t369 -= [1]
        t370 = t356 ^ [1]
        t371 = t356 | [1]
        assert self.cond_4(t356, t371), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t371), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t372 = t356 & [1]
        assert self.cond_4(t372, t356), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t372, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t373 = t356 - [1]
        t374 = hash(t332)
        t375 = () in t332
        t376 = t332 != self.get_ex_3()
        t377 = t332 < self.get_ex_3()
        t378 = t332 > self.get_ex_3()
        t379 = t332
        t379 ^= [1]
        t380 = () in t379
        t381 = t379 < self.get_ex_3()
        t382 = t379
        t382 &= [1]
        assert self.cond_4(t382, t379), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t382, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t383 = t379
        t383 -= [1]
        t384 = iter(t379)
        assert self.cond_2(t384, t379), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t385 = t379 <= self.get_ex_3()
        t386 = len(t379)
        t387 = t379 == self.get_ex_3()
        t388 = t379 != self.get_ex_3()
        t389 = t379 >= self.get_ex_3()
        t390 = t379 > self.get_ex_3()
        t391 = t379
        t391 |= [1]
        assert self.cond_4(t379, t391), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t391), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t392 = t379
        t392 ^= [1]
        t393 = t379 & [1]
        assert self.cond_4(t393, t379), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t393, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t394 = t379 - [1]
        t395 = t379 | [1]
        assert self.cond_4(t379, t395), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t395), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t396 = t379 ^ [1]
        t397 = t332
        t397 &= [1]
        assert self.cond_4(t397, t332), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t397, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t398 = iter(t397)
        assert self.cond_2(t398, t397), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t399 = t397 <= self.get_ex_3()
        t400 = t397
        t400 &= [1]
        assert self.cond_4(t400, t397), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t400, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t401 = t397
        t401 ^= [1]
        t402 = t397 == self.get_ex_3()
        t403 = t397 >= self.get_ex_3()
        t404 = len(t397)
        t405 = () in t397
        t406 = t397 != self.get_ex_3()
        t407 = t397 < self.get_ex_3()
        t408 = t397 > self.get_ex_3()
        t409 = t397
        t409 -= [1]
        t410 = t397
        t410 |= [1]
        assert self.cond_4(t397, t410), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t410), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t411 = t397 & [1]
        assert self.cond_4(t411, t397), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t411, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t412 = t397 ^ [1]
        t413 = t397 - [1]
        t414 = t397 | [1]
        assert self.cond_4(t397, t414), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t414), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t415 = t332 & [1]
        assert self.cond_4(t415, t332), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t415, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t416 = len(t415)
        t417 = hash(t415)
        t418 = iter(t415)
        assert self.cond_2(t418, t415), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t419 = () in t415
        t420 = t415 == self.get_ex_3()
        t421 = t415 != self.get_ex_3()
        t422 = t415 <= self.get_ex_3()
        t423 = t415 < self.get_ex_3()
        t424 = t415 >= self.get_ex_3()
        t425 = t415 > self.get_ex_3()
        t426 = t415
        t426 |= [1]
        assert self.cond_4(t415, t426), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t426), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t427 = t415
        t427 ^= [1]
        t428 = t415
        t428 -= [1]
        t429 = t415
        t429 &= [1]
        assert self.cond_4(t429, t415), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t429, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t430 = t415 & [1]
        assert self.cond_4(t430, t415), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t430, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t431 = t415 ^ [1]
        t432 = t415 | [1]
        assert self.cond_4(t415, t432), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t432), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t433 = t415 - [1]
        t434 = t332 ^ [1]
        t435 = iter(t434)
        assert self.cond_2(t435, t434), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t436 = len(t434)
        t437 = hash(t434)
        t438 = () in t434
        t439 = t434 == self.get_ex_3()
        t440 = t434 != self.get_ex_3()
        t441 = t434 <= self.get_ex_3()
        t442 = t434 < self.get_ex_3()
        t443 = t434 >= self.get_ex_3()
        t444 = t434 > self.get_ex_3()
        t445 = t434
        t445 |= [1]
        assert self.cond_4(t434, t445), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t445), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t446 = t434
        t446 ^= [1]
        t447 = t434
        t447 -= [1]
        t448 = t434
        t448 &= [1]
        assert self.cond_4(t448, t434), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t448, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t449 = t434 & [1]
        assert self.cond_4(t449, t434), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t449, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t450 = t434 ^ [1]
        t451 = t434 | [1]
        assert self.cond_4(t434, t451), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t451), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t452 = t434 - [1]
        t453 = t332 | [1]
        assert self.cond_4(t332, t453), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t453), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t454 = t453 != self.get_ex_3()
        t455 = len(t453)
        t456 = hash(t453)
        t457 = iter(t453)
        assert self.cond_2(t457, t453), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t458 = () in t453
        t459 = t453 == self.get_ex_3()
        t460 = t453 <= self.get_ex_3()
        t461 = t453 < self.get_ex_3()
        t462 = t453 >= self.get_ex_3()
        t463 = t453 > self.get_ex_3()
        t464 = t453
        t464 |= [1]
        assert self.cond_4(t453, t464), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t464), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t465 = t453
        t465 ^= [1]
        t466 = t453
        t466 -= [1]
        t467 = t453
        t467 &= [1]
        assert self.cond_4(t467, t453), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t467, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t468 = t453 & [1]
        assert self.cond_4(t468, t453), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t468, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t469 = t453 ^ [1]
        t470 = t453 | [1]
        assert self.cond_4(t453, t470), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t470), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t471 = t453 - [1]
        t472 = t332 - [1]
        t473 = t472 < self.get_ex_3()
        t474 = len(t472)
        t475 = hash(t472)
        t476 = iter(t472)
        assert self.cond_2(t476, t472), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t477 = () in t472
        t478 = t472 == self.get_ex_3()
        t479 = t472 != self.get_ex_3()
        t480 = t472 <= self.get_ex_3()
        t481 = t472 >= self.get_ex_3()
        t482 = t472 > self.get_ex_3()
        t483 = t472
        t483 |= [1]
        assert self.cond_4(t472, t483), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t483), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t484 = t472
        t484 ^= [1]
        t485 = t472
        t485 -= [1]
        t486 = t472
        t486 &= [1]
        assert self.cond_4(t486, t472), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t486, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t487 = t472 & [1]
        assert self.cond_4(t487, t472), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t487, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t488 = t472 ^ [1]
        t489 = t472 | [1]
        assert self.cond_4(t472, t489), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t489), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t490 = t472 - [1]
        t491 = arg.immnodeset([1])
        t492 = hash(t491)
        t493 = () in t491
        t494 = t491 != self.get_ex_3()
        t495 = t491 < self.get_ex_3()
        t496 = t491 > self.get_ex_3()
        t497 = t491
        t497 ^= [1]
        t498 = iter(t497)
        assert self.cond_2(t498, t497), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t499 = t497 <= self.get_ex_3()
        t500 = len(t497)
        t501 = t497 == self.get_ex_3()
        t502 = t497 != self.get_ex_3()
        t503 = t497 >= self.get_ex_3()
        t504 = t497 > self.get_ex_3()
        t505 = t497
        t505 |= [1]
        assert self.cond_4(t497, t505), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t505), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t506 = t497
        t506 ^= [1]
        t507 = () in t497
        t508 = t497 < self.get_ex_3()
        t509 = t497
        t509 &= [1]
        assert self.cond_4(t509, t497), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t509, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t510 = t497
        t510 -= [1]
        t511 = t497 | [1]
        assert self.cond_4(t497, t511), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t511), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t512 = t497 ^ [1]
        t513 = t497 & [1]
        assert self.cond_4(t513, t497), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t513, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t514 = t497 - [1]
        t515 = t491
        t515 &= [1]
        assert self.cond_4(t515, t491), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t515, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t516 = t515 == self.get_ex_3()
        t517 = t515 >= self.get_ex_3()
        t518 = len(t515)
        t519 = () in t515
        t520 = t515 != self.get_ex_3()
        t521 = t515 < self.get_ex_3()
        t522 = t515 > self.get_ex_3()
        t523 = t515
        t523 -= [1]
        t524 = t515
        t524 |= [1]
        assert self.cond_4(t515, t524), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t524), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t525 = iter(t515)
        assert self.cond_2(t525, t515), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t526 = t515 <= self.get_ex_3()
        t527 = t515
        t527 &= [1]
        assert self.cond_4(t527, t515), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t527, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t528 = t515
        t528 ^= [1]
        t529 = t515 - [1]
        t530 = t515 | [1]
        assert self.cond_4(t515, t530), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t530), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t531 = t515 & [1]
        assert self.cond_4(t531, t515), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t531, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t532 = t515 ^ [1]
        t533 = len(t491)
        t534 = iter(t491)
        assert self.cond_2(t534, t491), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t535 = t491 == self.get_ex_3()
        t536 = t491 <= self.get_ex_3()
        t537 = t491 >= self.get_ex_3()
        t538 = t491
        t538 |= [1]
        assert self.cond_4(t491, t538), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t538), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t539 = () in t538
        t540 = t538 < self.get_ex_3()
        t541 = t538
        t541 |= [1]
        assert self.cond_4(t538, t541), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t541), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t542 = t538
        t542 -= [1]
        t543 = len(t538)
        t544 = t538 != self.get_ex_3()
        t545 = t538 > self.get_ex_3()
        t546 = iter(t538)
        assert self.cond_2(t546, t538), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t547 = t538 == self.get_ex_3()
        t548 = t538 <= self.get_ex_3()
        t549 = t538 >= self.get_ex_3()
        t550 = t538
        t550 &= [1]
        assert self.cond_4(t550, t538), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t550, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t551 = t538
        t551 ^= [1]
        t552 = t538 | [1]
        assert self.cond_4(t538, t552), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t552), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t553 = t538 - [1]
        t554 = t538 & [1]
        assert self.cond_4(t554, t538), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t554, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t555 = t538 ^ [1]
        t556 = t491
        t556 -= [1]
        t557 = iter(t556)
        assert self.cond_2(t557, t556), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t558 = t556 <= self.get_ex_3()
        t559 = t556
        t559 &= [1]
        assert self.cond_4(t559, t556), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t559, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t560 = t556
        t560 -= [1]
        t561 = () in t556
        t562 = t556 < self.get_ex_3()
        t563 = len(t556)
        t564 = t556 == self.get_ex_3()
        t565 = t556 != self.get_ex_3()
        t566 = t556 >= self.get_ex_3()
        t567 = t556 > self.get_ex_3()
        t568 = t556
        t568 ^= [1]
        t569 = t556
        t569 |= [1]
        assert self.cond_4(t556, t569), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t569), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t570 = t556 & [1]
        assert self.cond_4(t570, t556), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t570, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t571 = t556 - [1]
        t572 = t556 ^ [1]
        t573 = t556 | [1]
        assert self.cond_4(t556, t573), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t573), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t574 = t491 | [1]
        assert self.cond_4(t491, t574), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t574), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t575 = hash(t574)
        t576 = len(t574)
        t577 = iter(t574)
        assert self.cond_2(t577, t574), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t578 = () in t574
        t579 = t574 == self.get_ex_3()
        t580 = t574 != self.get_ex_3()
        t581 = t574 <= self.get_ex_3()
        t582 = t574 < self.get_ex_3()
        t583 = t574 >= self.get_ex_3()
        t584 = t574 > self.get_ex_3()
        t585 = t574
        t585 |= [1]
        assert self.cond_4(t574, t585), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t585), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t586 = t574
        t586 ^= [1]
        t587 = t574
        t587 -= [1]
        t588 = t574
        t588 &= [1]
        assert self.cond_4(t588, t574), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t588, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t589 = t574 | [1]
        assert self.cond_4(t574, t589), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t589), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t590 = t574 - [1]
        t591 = t574 & [1]
        assert self.cond_4(t591, t574), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t591, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t592 = t574 ^ [1]
        t593 = t491 - [1]
        t594 = () in t593
        t595 = len(t593)
        t596 = hash(t593)
        t597 = iter(t593)
        assert self.cond_2(t597, t593), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t598 = t593 == self.get_ex_3()
        t599 = t593 != self.get_ex_3()
        t600 = t593 <= self.get_ex_3()
        t601 = t593 < self.get_ex_3()
        t602 = t593 >= self.get_ex_3()
        t603 = t593 > self.get_ex_3()
        t604 = t593
        t604 |= [1]
        assert self.cond_4(t593, t604), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t604), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t605 = t593
        t605 ^= [1]
        t606 = t593
        t606 -= [1]
        t607 = t593
        t607 &= [1]
        assert self.cond_4(t607, t593), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t607, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t608 = t593 | [1]
        assert self.cond_4(t593, t608), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t608), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t609 = t593 - [1]
        t610 = t593 & [1]
        assert self.cond_4(t610, t593), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t610, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t611 = t593 ^ [1]
        t612 = t491 & [1]
        assert self.cond_4(t612, t491), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t612, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t613 = t612 == self.get_ex_3()
        t614 = len(t612)
        t615 = hash(t612)
        t616 = iter(t612)
        assert self.cond_2(t616, t612), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t617 = () in t612
        t618 = t612 != self.get_ex_3()
        t619 = t612 <= self.get_ex_3()
        t620 = t612 < self.get_ex_3()
        t621 = t612 >= self.get_ex_3()
        t622 = t612 > self.get_ex_3()
        t623 = t612
        t623 |= [1]
        assert self.cond_4(t612, t623), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t623), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t624 = t612
        t624 ^= [1]
        t625 = t612
        t625 -= [1]
        t626 = t612
        t626 &= [1]
        assert self.cond_4(t626, t612), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t626, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t627 = t612 | [1]
        assert self.cond_4(t612, t627), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t627), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t628 = t612 - [1]
        t629 = t612 & [1]
        assert self.cond_4(t629, t612), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t629, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t630 = t612 ^ [1]
        t631 = t491 ^ [1]
        t632 = t631 <= self.get_ex_3()
        t633 = len(t631)
        t634 = hash(t631)
        t635 = iter(t631)
        assert self.cond_2(t635, t631), "Failed postcondition: 'CommonSet.equalset(<returned value>, x)'"
        t636 = () in t631
        t637 = t631 == self.get_ex_3()
        t638 = t631 != self.get_ex_3()
        t639 = t631 < self.get_ex_3()
        t640 = t631 >= self.get_ex_3()
        t641 = t631 > self.get_ex_3()
        t642 = t631
        t642 |= [1]
        assert self.cond_4(t631, t642), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t642), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t643 = t631
        t643 ^= [1]
        t644 = t631
        t644 -= [1]
        t645 = t631
        t645 &= [1]
        assert self.cond_4(t645, t631), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t645, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t646 = t631 | [1]
        assert self.cond_4(t631, t646), "Failed postcondition: 'CommonSet.subset(x, <returned value>)'"
        assert self.cond_4([1], t646), "Failed postcondition: 'CommonSet.subset(y, <returned value>)'"
        t647 = t631 - [1]
        t648 = t631 & [1]
        assert self.cond_4(t648, t631), "Failed postcondition: 'CommonSet.subset(<returned value>, x)'"
        assert self.cond_4(t648, [1]), "Failed postcondition: 'CommonSet.subset(<returned value>, y)'"
        t649 = t631 ^ [1]
    tests['.tgt.sets.module_sets'] = test_module_sets
